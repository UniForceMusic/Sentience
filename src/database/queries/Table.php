<?php

namespace src\database\queries;

use PDOStatement;

trait Table
{
    protected string $table = '';

    public function table(string $table): static
    {
        $this->table = $table;

        return $this;
    }

    public function createTable(): PDOStatement
    {
        $queryBuilder = $this->database->getQueryBuilder();
        [$query, $params] = $queryBuilder->createTable(
            $this->table,
            $this->ifNotExists,
            $this->properties,
            $this->primaryKey,
            $this->primaryKeyAutoGenerated,
        );

        return $this->database->exec($query, $params);
    }

    public function describeTable(): PDOStatement
    {
        $queryBuilder = $this->database->getQueryBuilder();
        [$query, $params] = $queryBuilder->describe(
            $this->table,
        );

        return $this->database->exec($query, $params);
    }

    public function createSql(): string
    {
        $queryBuilder = $this->database->getQueryBuilder();
        [$query, $params] = $queryBuilder->createTable(
            $this->table,
            $this->ifNotExists,
            $this->properties,
            $this->primaryKey,
            $this->primaryKeyAutoGenerated,
        );

        return $query;
    }

    public function describeSql(): string
    {
        $queryBuilder = $this->database->getQueryBuilder();
        [$query, $params] = $queryBuilder->describe(
            $this->table,
        );

        return $query;
    }
}
